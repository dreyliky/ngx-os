{
    "pipes": [],
    "interfaces": [
        {
            "name": "DragInfo",
            "id": "interface-DragInfo-add0ff28ff53cf51f963e9e1f373d51f",
            "file": "projects/os-angular/src/lib/modules/drag-and-drop/interfaces/drag-info.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "draggableElementDomRect",
                    "type": "DOMRect",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "mouseEvent",
                    "type": "MouseEvent",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "DynamicWindowDiParams",
            "id": "interface-DynamicWindowDiParams-837433f6d809251f8cc40a87e11efe6b",
            "file": "projects/os-angular/src/lib/modules/window/interfaces/dynamic-window-di-params.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "config",
                    "type": "DynamicWindowConfig",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "windowRef",
                    "type": "DynamicWindowRef",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "DynamicWindowInputParams",
            "id": "interface-DynamicWindowInputParams-7c8d257837a59859a556f82bb26824c7",
            "file": "projects/os-angular/src/lib/modules/window/interfaces/dynamic-window-input-params.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "childComponent",
                    "type": "Type<any>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "config",
                    "type": "DynamicWindowConfig",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "windowRef",
                    "type": "DynamicWindowRef",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ListItem",
            "id": "interface-ListItem-b43815da76cda607352dac215e33503b",
            "file": "projects/os-angular/src/lib/modules/list/interfaces/item.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "iconUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "onClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "onDblClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ResizeInfo",
            "id": "interface-ResizeInfo-197afd241c38d7ba66242bf9377e4a5a",
            "file": "projects/os-angular/src/lib/modules/resizer/interfaces/resize-info.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "height",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "positionBottom",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "positionLeft",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "positionRight",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "positionTop",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "width",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "TreeNode",
            "id": "interface-TreeNode-add7d02e4d8cb15cc4571da06e96169d",
            "file": "projects/os-angular/src/lib/modules/tree-view/interfaces/node.interface.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "children",
                    "type": "TreeNode<T>[]",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "collapsedIconClass",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "data",
                    "type": "T",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "expanded",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "expandedIconClass",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "iconClass",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "key",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "parent",
                    "type": "TreeNode<T>",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "style",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "styleClass",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "DynamicWindowControlService",
            "id": "injectable-DynamicWindowControlService-3a3e747d5fd86548f5b62f8c1a3c2c46",
            "file": "projects/os-angular/src/lib/modules/window/services/dynamic-window-control.service.ts",
            "properties": [
                {
                    "name": "_activeWindowId$",
                    "defaultValue": "new BehaviorSubject<string>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_windowComponentsRef$",
                    "defaultValue": "new BehaviorSubject<ComponentRef<DynamicWindowComponent>[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_windowIdsOrder$",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addWindowComponentRef",
                    "args": [
                        {
                            "name": "windowComponentRef",
                            "type": "ComponentRef<DynamicWindowComponent>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "windowComponentRef",
                            "type": "ComponentRef<DynamicWindowComponent>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWindowComponentsRef",
                    "args": [],
                    "optional": false,
                    "returnType": "ComponentRef[]",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "removeWindowComponentRef",
                    "args": [
                        {
                            "name": "windowComponentRef",
                            "type": "ComponentRef<DynamicWindowComponent>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "windowComponentRef",
                            "type": "ComponentRef<DynamicWindowComponent>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetActiveWindowId",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "setActiveStateForWindowId",
                    "args": [
                        {
                            "name": "windowId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "windowId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "accessors": {
                "activeWindowId$": {
                    "name": "activeWindowId$",
                    "getSignature": {
                        "name": "activeWindowId$",
                        "type": "",
                        "returnType": "Observable<string>",
                        "line": 12
                    }
                },
                "windowIdsOrder$": {
                    "name": "windowIdsOrder$",
                    "getSignature": {
                        "name": "windowIdsOrder$",
                        "type": "",
                        "returnType": "Observable<string[]>",
                        "line": 16
                    }
                },
                "windowComponentsRef$": {
                    "name": "windowComponentsRef$",
                    "getSignature": {
                        "name": "windowComponentsRef$",
                        "type": "",
                        "returnType": "Observable<ComponentRef[]>",
                        "line": 20
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "DynamicWindowService",
            "id": "injectable-DynamicWindowService-53335ca70f261bb8c47a9720445dd309",
            "file": "projects/os-angular/src/lib/modules/window/services/dynamic-window.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "appendWindowComponentToBody",
                    "args": [
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "applyDataForCreatedWindow",
                    "args": [
                        {
                            "name": "params",
                            "type": "DynamicWindowInputParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "DynamicWindowInputParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createComponentRef",
                    "args": [
                        {
                            "name": "windowInjector",
                            "type": "DynamicWindowInjector"
                        }
                    ],
                    "optional": false,
                    "returnType": "ComponentRef<DynamicWindowComponent>",
                    "typeParameters": [],
                    "line": 59,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "windowInjector",
                            "type": "DynamicWindowInjector",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicWindow",
                    "args": [
                        {
                            "name": "config",
                            "type": "DynamicWindowConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicWindowRef",
                    "typeParameters": [],
                    "line": 38,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "DynamicWindowConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createWindowInjector",
                    "args": [
                        {
                            "name": "params",
                            "type": "DynamicWindowDiParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicWindowInjector",
                    "typeParameters": [],
                    "line": 50,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "DynamicWindowDiParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initWindowRefAfterClosedObserver",
                    "args": [
                        {
                            "name": "windowRef",
                            "type": "DynamicWindowRef"
                        },
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "windowRef",
                            "type": "DynamicWindowRef",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "childComponent",
                            "type": "Type<any>"
                        },
                        {
                            "name": "configuration",
                            "type": "DynamicWindowConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicWindowRef",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "childComponent",
                            "type": "Type<any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "DynamicWindowConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeWindowComponentFromBody",
                    "args": [
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentRef",
                            "type": "ComponentRef<DynamicWindowComponent>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector"
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver"
                    },
                    {
                        "name": "applicationRef",
                        "type": "ApplicationRef"
                    },
                    {
                        "name": "windowControlService",
                        "type": "DynamicWindowControlService"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "applicationRef",
                        "type": "ApplicationRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windowControlService",
                        "type": "DynamicWindowControlService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "BottomLeftResizer",
            "id": "class-BottomLeftResizer-246ae0067d83c0a27f0617108082b3f0",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/bottom-left-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BottomResizer",
            "id": "class-BottomResizer-4b41693c0f19a7f3098a090a40d35f15",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/bottom-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BottomRightResizer",
            "id": "class-BottomRightResizer-9bc41725c826f9e3571a7f1e8efbeeb6",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/bottom-right-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DraggerConfig",
            "id": "class-DraggerConfig-6e6cb0e5e3603cf5b2ac4e92547f0058",
            "file": "projects/os-angular/src/lib/modules/drag-and-drop/classes/dragger-config.ts",
            "type": "class",
            "properties": [
                {
                    "name": "allowedMouseButtons",
                    "defaultValue": "[MouseButtonEnum.left]",
                    "type": "MouseButtonEnum[]",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "childElementsBlackList",
                    "defaultValue": "[]",
                    "type": "HTMLElement[]",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "draggableElement",
                    "type": "HTMLElement",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isAllowMoveElement",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isEnabled",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "movableElement",
                    "type": "HTMLElement",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "shiftX",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "shiftY",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DynamicWindowConfig",
            "id": "class-DynamicWindowConfig-3155f46f69a6edfef7f8f2dc1f6f4a88",
            "file": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-config.ts",
            "type": "class",
            "properties": [
                {
                    "name": "allowedResizers",
                    "type": "ResizerEnum[]",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "data",
                    "type": "D",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "height",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isAlwaysOnTop",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isClosable",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isExitFullscreenByDragTitle",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isFullscreen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isHidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isMaximizable",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isMinimizable",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isTitleBarVisible",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isToggleFullscreenByDblClickTitle",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "Infinity",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "maxWidth",
                    "defaultValue": "Infinity",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "minHeight",
                    "defaultValue": "175",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "minWidth",
                    "defaultValue": "275",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onCloseButtonClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onMaximizeButtonClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onMinimizeButtonClick",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "positionX",
                    "defaultValue": "128",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "positionY",
                    "defaultValue": "128",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "scrollViewStyle",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "scrollViewStyleClass",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'OS dynamic window'",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "width",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DynamicWindowInjector",
            "id": "class-DynamicWindowInjector-4afef771a30a8879886b6ffe8499222c",
            "file": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-injector.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_parentInjector",
                        "type": "Injector"
                    },
                    {
                        "name": "_additionalTokens",
                        "type": "WeakMap<any | any>"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "_parentInjector",
                        "type": "Injector",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_additionalTokens",
                        "type": "WeakMap<any | any>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "Type<T> | InjectionToken<T>"
                        },
                        {
                            "name": "notFoundValue",
                            "type": "T",
                            "optional": true
                        },
                        {
                            "name": "flags",
                            "type": "InjectFlags",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 10,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "Type<T> | InjectionToken<T>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "T",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flags",
                            "type": "InjectFlags",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "any"
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "any"
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "optional": true
                        },
                        {
                            "name": "flags",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flags",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Injector"
            ]
        },
        {
            "name": "DynamicWindowRef",
            "id": "class-DynamicWindowRef-4f8dc374331dc7a22b7b482ece74f933",
            "file": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-ref.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "properties": [
                {
                    "name": "_afterClosed$",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_config$",
                    "defaultValue": "new BehaviorSubject<DynamicWindowConfig>({})",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_isFullscreen$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_isHidden$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_windowElement$",
                    "defaultValue": "new BehaviorSubject<HTMLDivElement>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_setWindowElement",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLDivElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLDivElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "result",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goFullscreen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "goWindowed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "setFullscreenState",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIsHiddenState",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "updateConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "DynamicWindowConfig"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "DynamicWindowConfig",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "isHidden$": {
                    "name": "isHidden$",
                    "getSignature": {
                        "name": "isHidden$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 8
                    }
                },
                "isHidden": {
                    "name": "isHidden",
                    "getSignature": {
                        "name": "isHidden",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 12
                    }
                },
                "isFullscreen": {
                    "name": "isFullscreen",
                    "getSignature": {
                        "name": "isFullscreen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 16
                    }
                },
                "isFullscreen$": {
                    "name": "isFullscreen$",
                    "getSignature": {
                        "name": "isFullscreen$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 20
                    }
                },
                "afterClosed$": {
                    "name": "afterClosed$",
                    "getSignature": {
                        "name": "afterClosed$",
                        "type": "",
                        "returnType": "Observable<any>",
                        "line": 24
                    }
                },
                "config$": {
                    "name": "config$",
                    "getSignature": {
                        "name": "config$",
                        "type": "",
                        "returnType": "Observable<DynamicWindowConfig>",
                        "line": 28
                    }
                },
                "config": {
                    "name": "config",
                    "getSignature": {
                        "name": "config",
                        "type": "",
                        "returnType": "DynamicWindowConfig",
                        "line": 32
                    }
                },
                "windowElement": {
                    "name": "windowElement",
                    "getSignature": {
                        "name": "windowElement",
                        "type": "",
                        "returnType": "HTMLDivElement",
                        "line": 36
                    }
                },
                "windowElement$": {
                    "name": "windowElement$",
                    "getSignature": {
                        "name": "windowElement$",
                        "type": "",
                        "returnType": "Observable<HTMLDivElement>",
                        "line": 40
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IdGenerator",
            "id": "class-IdGenerator-8b44af34ca6d7cc960be842a30b9e57e",
            "file": "projects/os-angular/src/lib/helpers/id-generator.helper.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "generate",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LeftResizer",
            "id": "class-LeftResizer-fc61b1c276493e28ff208428d1a42ae4",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/left-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OutsideClick",
            "id": "class-OutsideClick-d6a8d3eaa49644712e0138ba6dc978c5",
            "file": "projects/os-angular/src/lib/helpers/outside-click.helper.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "checkForElement",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 3,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RandomHelper",
            "id": "class-RandomHelper-0f88862ab8e10ea0e3d635b163d81791",
            "file": "projects/os-angular/src/lib/helpers/random.helper.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "getRandomInt",
                    "args": [
                        {
                            "name": "min",
                            "type": "number"
                        },
                        {
                            "name": "max",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 3,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "min",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Resizer",
            "id": "class-Resizer-959b3f54b45b0edebcb18e8243af4bca",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/resizer.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "context",
                        "type": "OsResizableDirective"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "context",
                        "type": "OsResizableDirective",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ]
                }
            ],
            "methods": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ]
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ResizerConfig",
            "id": "class-ResizerConfig-d22da75b65d1db5ba41ff60983a4b932",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/resizer-config.ts",
            "type": "class",
            "properties": [
                {
                    "name": "allowedMouseButtons",
                    "defaultValue": "[MouseButtonEnum.left]",
                    "type": "MouseButtonEnum[]",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "allowedResizers",
                    "type": "ResizerEnum[]",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isAllowChangePosition",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isEnabled",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "Infinity",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "maxWidth",
                    "defaultValue": "Infinity",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "minHeight",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "minWidth",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "targetElement",
                    "type": "HTMLElement",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "xAxisStyleName",
                    "defaultValue": "'left'",
                    "type": "xAxisStyleNameType",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "yAxisStyleName",
                    "defaultValue": "'top'",
                    "type": "yAxisStyleNameType",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RightResizer",
            "id": "class-RightResizer-b260341bbc28f4a22c9d664b3875c41b",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/right-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TopLeftResizer",
            "id": "class-TopLeftResizer-6eecee33d8d51c0d6c416a43eae1a901",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/top-left-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TopResizer",
            "id": "class-TopResizer-b441f6239258e063858eb60f3341d1ba",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/top-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TopRightResizer",
            "id": "class-TopRightResizer-32a4b12fa93467dfb5164bd0ec8b02f0",
            "file": "projects/os-angular/src/lib/modules/resizer/classes/top-right-resizer.ts",
            "type": "class",
            "properties": [
                {
                    "name": "config",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "methods": [
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        113
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                },
                {
                    "name": "resizeElement",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114,
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "Resizer"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "Resizer",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "DynamicWindowContentDirective",
            "id": "directive-DynamicWindowContentDirective-bcf78692d0c2f4240fc76a90c08dba60",
            "file": "projects/os-angular/src/lib/modules/window/directives/dynamic-window-content.directive.ts",
            "type": "directive",
            "description": "",
            "selector": "[dynamicWindowContent]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "viewContainerRef",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114,
                        132
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "OsDraggableDirective",
            "id": "directive-OsDraggableDirective-e229a5a7eee3fdee666cb97d4e38b1b4",
            "file": "projects/os-angular/src/lib/modules/drag-and-drop/directives/draggable.directive.ts",
            "type": "directive",
            "description": "",
            "selector": "[os-draggable]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "os-draggable",
                    "line": 11,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "osAfterDragging",
                    "defaultValue": "new EventEmitter<DragInfo>()",
                    "line": 35,
                    "type": "EventEmitter"
                },
                {
                    "name": "osBeforeDragStart",
                    "defaultValue": "new EventEmitter<DragInfo>()",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "osDragEnd",
                    "defaultValue": "new EventEmitter<DragInfo>()",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "osDragging",
                    "defaultValue": "new EventEmitter<DragInfo>()",
                    "line": 32,
                    "type": "EventEmitter"
                },
                {
                    "name": "osDragStart",
                    "defaultValue": "new EventEmitter<DragInfo>()",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_draggableElement",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_draggerConfig",
                    "defaultValue": "new DraggerConfig()",
                    "type": "DraggerConfig",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_movableElement",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "documentMouseMoveHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "documentMouseUpHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "elementMouseDownHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "shiftX",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "shiftY",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getDragInfo",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "DragInfo",
                    "typeParameters": [],
                    "line": 133,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initDraggableElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initMovableElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "setShiftX",
                    "args": [
                        {
                            "name": "dragInfo",
                            "type": "DragInfo"
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "dragInfo",
                            "type": "DragInfo",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setShiftY",
                    "args": [
                        {
                            "name": "dragInfo",
                            "type": "DragInfo"
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "dragInfo",
                            "type": "DragInfo",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMovableElementPosition",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>"
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "draggerConfig": {
                    "name": "draggerConfig",
                    "setSignature": {
                        "name": "draggerConfig",
                        "type": "void",
                        "args": [
                            {
                                "name": "config",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "draggerConfig",
                        "type": "",
                        "returnType": "DraggerConfig",
                        "line": 18
                    }
                }
            }
        },
        {
            "name": "OsResizableDirective",
            "id": "directive-OsResizableDirective-1dba6b2e77131ffe49a8c802932b8e60",
            "file": "projects/os-angular/src/lib/modules/resizer/directives/resizable.directive.ts",
            "type": "directive",
            "description": "",
            "selector": "[os-resizable]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "os-resizable",
                    "line": 24,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "osResizableElementInit",
                    "defaultValue": "new EventEmitter<HTMLElement>()",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "osResizeEnd",
                    "defaultValue": "new EventEmitter<ResizeInfo>()",
                    "line": 46,
                    "type": "EventEmitter"
                },
                {
                    "name": "osResizerElementInit",
                    "defaultValue": "new EventEmitter<HTMLElement>()",
                    "line": 40,
                    "type": "EventEmitter"
                },
                {
                    "name": "osResizeStart",
                    "defaultValue": "new EventEmitter<ResizeInfo>()",
                    "line": 43,
                    "type": "EventEmitter"
                },
                {
                    "name": "osResizing",
                    "defaultValue": "new EventEmitter<ResizeInfo>()",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_allowedResizers",
                    "type": "ResizerEnum[]",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_resizableElement",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_resizerConfig",
                    "defaultValue": "new ResizerConfig()",
                    "type": "ResizerConfig",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_resizerElements",
                    "defaultValue": "[]",
                    "type": "HTMLElement[]",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_resizerInstanceMap",
                    "defaultValue": "new Map()",
                    "type": "Map<ResizerEnum | Resizer>",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_resizersWrapperElement",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "activeResizerName",
                    "type": "ResizerEnum",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "documentMouseMoveHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "documentMouseUpHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 220,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "originalHeight",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalMouseX",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalMouseY",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalWidth",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalX",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalY",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "resizerMouseDownHandler",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 186,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getResizeInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "ResizeInfo",
                    "typeParameters": [],
                    "line": 93,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "initAllowedResizers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initResizableElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initResizerElements",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initResizerInstances",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initResizersWrapperElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "updateResizersActivity",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "updateResizersWrapperDomPlacement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>"
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "resizerConfig": {
                    "name": "resizerConfig",
                    "setSignature": {
                        "name": "resizerConfig",
                        "type": "void",
                        "args": [
                            {
                                "name": "config",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "resizerConfig",
                        "type": "",
                        "returnType": "ResizerConfig",
                        "line": 32
                    }
                },
                "resizableElement": {
                    "name": "resizableElement",
                    "getSignature": {
                        "name": "resizableElement",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 51
                    }
                },
                "resizerElement": {
                    "name": "resizerElement",
                    "getSignature": {
                        "name": "resizerElement",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 55
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c73c458ee287123964af1ad6efaab2e6",
            "file": "projects/os-angular/src/lib/modules/button/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "line": 13,
                    "type": "buttonType"
                },
                {
                    "name": "ariaControls",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "ariaLabel",
                    "line": 13,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "ariaSelected",
                    "line": 19,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "disabled",
                    "line": 10,
                    "type": "boolean",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "role",
                    "line": 22,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osBlur",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element blur event</p>\n",
                    "line": 34,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osFocus",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element focus event</p>\n",
                    "line": 28,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseButtonComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "extends": "OsBaseButtonComponent",
            "readme": "<p>####Button description\nFrom .md file</p>\n",
            "templateData": "<button\n    class=\"os-element\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [disabled]=\"disabled\"\n    [type]=\"type\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-selected]=\"ariaSelected\"\n    [attr.aria-controls]=\"ariaControls\"\n    [attr.role]=\"role\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\"\n    (focus)=\"osFocus.emit($event)\"\n    (blur)=\"osBlur.emit($event)\">\n    <ng-content>\n    </ng-content>\n</button>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-f9a254f094ff395fdf48efd1998452d4",
            "file": "projects/os-angular/src/lib/modules/checkbox/components/checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "extends": "OsBaseComponent",
            "templateData": "<input\n    class=\"os-element\"\n    type=\"checkbox\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [name]=\"name\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\" />\n\n<label\n    class=\"os-element\">\n    {{ label }}\n</label>"
        },
        {
            "name": "DynamicWindowComponent",
            "id": "component-DynamicWindowComponent-6975b6c72f5f0ad22cc1b4d47de6fd2c",
            "file": "projects/os-angular/src/lib/modules/window/components/dynamic-window/dynamic-window.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-dynamic-window",
            "styleUrls": [
                "./dynamic-window.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-window.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_alwaysOnTopZIndex",
                    "defaultValue": "5000",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_baseZIndex",
                    "defaultValue": "1000",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_childComponentRef",
                    "type": "ComponentRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_draggableDirective",
                    "type": "OsDraggableDirective",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "OsDraggableDirective, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_dynamicWindowContent",
                    "type": "DynamicWindowContentDirective",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DynamicWindowContentDirective, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_heightAtWindowedMode",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_id",
                    "defaultValue": "IdGenerator.generate('os-window')",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_isAfterExitFullscreenByDragging",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_widthAtWindowedMode",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_windowComponent",
                    "type": "WindowComponent",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "WindowComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "allowedResizers",
                    "type": "ResizerEnum[]",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "childComponentType",
                    "type": "Type<any>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "config",
                    "type": "DynamicWindowConfig",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "height",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isAllowDragging",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isAllowResizing",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isClosing",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isFullscreen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isHidden",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isOpening",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isResizing",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "positionX",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "positionY",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "styleObject",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "titleBarButtons",
                    "defaultValue": "[]",
                    "type": "HTMLButtonElement[]",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "titleBarElement",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "width",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "windowElement",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "windowIdOrderIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "windowRef",
                    "type": "DynamicWindowRef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "zIndex",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initActiveWindowIdObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 261,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initAfterClosedStateObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 284,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initConfigObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 319,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initHtmlElements",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initIsFullscreenStateObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initIsHiddenStateObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 295,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initIsOpeningState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initWindowIdOrderObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "initWindowSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 244,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "loadChildComponent",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<any>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentType",
                            "type": "Type<any>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onAfterDragging",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragInfo"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragInfo",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBeforeDragStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onCloseButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onDragEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onDragging",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onDragStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onMaximizeButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onMinimizeButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onResizeEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onResizeStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 204,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onResizing",
                    "args": [
                        {
                            "name": "event",
                            "type": "ResizeInfo"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ResizeInfo",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTitleBarDblClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onWindowMouseDown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "updateZIndex",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 128
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host::ng-deep .os-window {\n    position: fixed;\n    z-index: 1000;\n\n    ::ng-deep .os-title-bar {\n        user-select: none;\n    }\n}\n\n:host::ng-deep .os-window,\n:host::ng-deep .os-window-body,\n:host::ng-deep os-scroll-view {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n:host::ng-deep .os-window-body,\n:host::ng-deep os-scroll-view,\n:host::ng-deep .os-scroll-view {\n    height: 100%;\n}\n",
                    "styleUrl": "./dynamic-window.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dynamicWindowElementRef",
                        "type": "ElementRef"
                    },
                    {
                        "name": "windowControlService",
                        "type": "DynamicWindowControlService"
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver"
                    },
                    {
                        "name": "changeDetector",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 80,
                "jsdoctags": [
                    {
                        "name": "dynamicWindowElementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windowControlService",
                        "type": "DynamicWindowControlService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDetector",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "AfterViewInit"
            ],
            "templateData": "<os-window\n    [os-draggable]=\"{\n        draggableElement: titleBarElement,\n        movableElement: windowElement,\n        childElementsBlackList: titleBarButtons,\n        isAllowMoveElement: isAllowDragging\n    }\"\n    [os-resizable]=\"{\n        targetElement: windowElement,\n        minWidth: config.minWidth,\n        minHeight: config.minHeight,\n        maxWidth: config.maxWidth,\n        maxHeight: config.maxHeight,\n        allowedResizers: config.allowedResizers,\n        isEnabled: isAllowResizing\n    }\"\n    [title]=\"config.title\"\n    [width]=\"width\"\n    [height]=\"height\"\n    [zIndex]=\"zIndex\"\n    [isActive]=\"isActive\"\n    [isMinimizable]=\"config.isMinimizable\"\n    [isMaximizable]=\"config.isMaximizable\"\n    [isClosable]=\"config.isClosable\"\n    [isTitleBarVisible]=\"config.isTitleBarVisible\"\n    [scrollViewStyle]=\"config.scrollViewStyle\"\n    [scrollViewStyleClass]=\"config.scrollViewStyleClass\"\n    [styleClass]=\"{\n        'opening': isOpening,\n        'hiding': isHidden,\n        'fullscreen': isFullscreen,\n        'windowed': !isFullscreen,\n        'dragging': isDragging,\n        'resizing': isResizing,\n        'closing': isClosing\n    }\"\n    [style]=\"{\n        left: positionX,\n        top: positionY\n    }\"\n    (osBeforeDragStart)=\"onBeforeDragStart()\"\n    (osDragStart)=\"onDragStart()\"\n    (osDragging)=\"onDragging()\"\n    (osAfterDragging)=\"onAfterDragging($event)\"\n    (osDragEnd)=\"onDragEnd()\"\n    (osMouseDown)=\"onWindowMouseDown()\"\n    (osResizeStart)=\"onResizeStart()\"\n    (osResizing)=\"onResizing($event)\"\n    (osResizeEnd)=\"onResizeEnd()\"\n    (osTitleBarDblClick)=\"onTitleBarDblClick()\"\n    (osMinimizeButtonClick)=\"onMinimizeButtonClick()\"\n    (osMaximizeButtonClick)=\"onMaximizeButtonClick()\"\n    (osCloseButtonClick)=\"onCloseButtonClick()\">\n\n    <ng-template dynamicWindowContent>\n    </ng-template>\n\n</os-window>"
        },
        {
            "name": "FieldRowComponent",
            "id": "component-FieldRowComponent-2682444ecd375698482de16405d06a9e",
            "file": "projects/os-angular/src/lib/modules/field-row/components/field-row/field-row.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-field-row",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./field-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    class=\"os-element field-row\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [class.stacked]=\"stacked\">\n    <ng-content></ng-content>\n</div>"
        },
        {
            "name": "GroupBoxComponent",
            "id": "component-GroupBoxComponent-a394a02bf00b5d130dde3e9b34483264",
            "file": "projects/os-angular/src/lib/modules/group-box/components/group-box/group-box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-group-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./group-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "extends": "OsBaseComponent",
            "templateData": "<fieldset\n    class=\"os-element\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\">\n    <legend\n        *ngIf=\"label\"\n        class=\"os-element\">\n        {{ label }}\n    </legend>\n\n    <ng-content>\n    </ng-content>\n</fieldset>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-66177fee865bf5e9ed6dad9bcf9868fe",
            "file": "projects/os-angular/src/lib/modules/text/components/header/header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_size",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getValidSize",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 28,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateSize",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "extends": "OsBaseComponent",
            "accessors": {
                "size": {
                    "name": "size",
                    "setSignature": {
                        "name": "size",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 12,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "size",
                        "type": "number",
                        "returnType": "number",
                        "line": 18
                    }
                }
            },
            "templateData": "<div\n    [ngSwitch]=\"size\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\">\n    <h1\n        *ngSwitchCase=\"1\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h1>\n\n    <h2\n        *ngSwitchCase=\"2\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h2>\n\n    <h3\n        *ngSwitchCase=\"3\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h3>\n\n    <h4\n        *ngSwitchCase=\"4\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h4>\n\n    <h5\n        *ngSwitchCase=\"5\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h5>\n\n    <h6\n        *ngSwitchCase=\"6\"\n        class=\"os-header os-element\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h6>\n</div>\n\n<ng-template #contentTemplate>\n    <ng-content></ng-content>\n</ng-template>"
        },
        {
            "name": "ItemComponent",
            "id": "component-ItemComponent-b7156cf8aad79750e8c625f72c6682f0",
            "file": "projects/os-angular/src/lib/modules/list/components/item/item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 14,
                    "type": "ListItem"
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "osDblClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_osListItemElement",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'OsListItem'"
                        }
                    ],
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDblClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 33
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    #OsListItem\n    class=\"os-element os-list-item\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [class.selected]=\"isSelected\"\n    (click)=\"onClick($event)\"\n    (dblclick)=\"onDblClick($event)\">\n\n    <div class=\"os-element os-list-item-image-wrapper\">\n        <img\n            class=\"os-element os-list-item-image\"\n            [attr.src]=\"data.iconUrl\" />\n    </div>\n\n    <span\n        class=\"os-element os-list-item-text\">\n        {{ data.label }}\n    </span>\n\n</div>"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-77ae8a324eea15054a068a831da1fbe2",
            "file": "projects/os-angular/src/lib/modules/list/components/list/list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    class=\"os-element os-list\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\">\n    <ng-content>\n    </ng-content>\n</div>"
        },
        {
            "name": "OptionComponent",
            "id": "component-OptionComponent-936c6a4f7e850fd087e6a91fcca0008b",
            "file": "projects/os-angular/src/lib/modules/selectbox/components/option/option.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-option",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./option.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selected",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "optionTemplate",
                    "type": "TemplateRef<HTMLOptionElement>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'OptionTemplate', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "extends": "OsBaseComponent",
            "templateData": "<ng-template #OptionTemplate>\n    <option\n        class=\"os-element\"\n        [class]=\"styleClass\"\n        [ngStyle]=\"style\"\n        [selected]=\"selected\">\n        <ng-content>\n        </ng-content>\n    </option>\n</ng-template>"
        },
        {
            "name": "OsBaseButtonComponent",
            "id": "component-OsBaseButtonComponent-cd08a0fb16535407dbb987a5b6f76d3a",
            "file": "projects/os-angular/src/lib/core/base-components/button.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaControls",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "ariaLabel",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "ariaSelected",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "role",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osBlur",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element blur event</p>\n",
                    "line": 34,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osFocus",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element focus event</p>\n",
                    "line": 28,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 34
            },
            "extends": "OsBaseComponent"
        },
        {
            "name": "OsBaseComponent",
            "id": "component-OsBaseComponent-1ca9774c4b06b7859b8e39e8a1ac0342",
            "file": "projects/os-angular/src/lib/core/base-components/element.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object"
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 66
            }
        },
        {
            "name": "OsBaseFieldComponent",
            "id": "component-OsBaseFieldComponent-09d1d4723b8a70c1aa05a56289f11663",
            "file": "projects/os-angular/src/lib/core/base-components/field.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osBlur",
                    "defaultValue": "new EventEmitter()",
                    "line": 25,
                    "type": "EventEmitter<Event>"
                },
                {
                    "name": "osChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<Event>"
                },
                {
                    "name": "osFocus",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 28
            },
            "extends": "OsBaseComponent"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-6ac65bdeac709fef7d459c5fd71e52e6",
            "file": "projects/os-angular/src/lib/modules/radio-button/components/radio-button/radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-radio-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "extends": "OsBaseComponent",
            "templateData": "<input\n    class=\"os-element\"\n    type=\"radio\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [name]=\"name\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\" />\n\n<label\n    class=\"os-element\">\n    {{ label }}\n</label>"
        },
        {
            "name": "ScrollViewComponent",
            "id": "component-ScrollViewComponent-b82a9ee3d29df0f1c0c6bb1318e0c0bd",
            "file": "projects/os-angular/src/lib/modules/scroll-view/components/scroll-view/scroll-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-scroll-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./scroll-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "horizontalScrollEnabled",
                    "defaultValue": "false",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "verticalScrollEnabled",
                    "defaultValue": "true",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    class=\"os-element os-scroll-view\"\n    [style.overflow-x]=\"(horizontalScrollEnabled) ? 'auto' : 'hidden'\"\n    [style.overflow-y]=\"(verticalScrollEnabled) ? 'auto' : 'hidden'\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\">\n\n    <ng-content>\n    </ng-content>\n\n</div>"
        },
        {
            "name": "SelectboxComponent",
            "id": "component-SelectboxComponent-6f9b805c47015f4d7ab9e739fc45a97b",
            "file": "projects/os-angular/src/lib/modules/selectbox/components/selectbox/selectbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-selectbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./selectbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "optionComponentList",
                    "type": "QueryList<OptionComponent>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "OptionComponent"
                        }
                    ],
                    "modifierKind": [
                        114,
                        132
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "optionComponent",
                            "type": "OptionComponent"
                        },
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "optionComponent",
                            "type": "OptionComponent",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "extends": "OsBaseComponent",
            "templateData": "<select\n    class=\"os-element\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\">\n\n    <ng-template\n        ngFor\n        let-optionContent\n        [ngForOf]=\"optionComponentList\"\n        [ngForTrackBy]=\"trackByFn\">\n        <ng-container\n            *ngTemplateOutlet=\"optionContent.optionTemplate\">\n        </ng-container>\n    </ng-template>\n\n</select>"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-1db1bef272491c8205b66ce3373011ba",
            "file": "projects/os-angular/src/lib/modules/slider/components/slider/slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "isVertical",
                    "defaultValue": "false",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "line": 30,
                    "type": "number"
                },
                {
                    "name": "maxValueLabel",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "line": 27,
                    "type": "number"
                },
                {
                    "name": "minValueLabel",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 33
            },
            "extends": "OsBaseComponent",
            "templateData": "<label\n    class=\"os-element\">\n    {{ label }}\n</label>\n\n<label class=\"os-element\">\n    {{ minValueLabel }}\n</label>\n\n<input\n    type=\"range\"\n    class=\"os-element\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [disabled]=\"disabled\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [value]=\"value\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\" />\n\n<label class=\"os-element\">\n    {{ maxValueLabel }}\n</label>"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-dea7da0bb9d1d5aff6652ff10a0fec60",
            "file": "projects/os-angular/src/lib/modules/tab-group/components/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-tab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "tabButtonStyle",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tabButtonStyleClass",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osTabButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "tabButtonTemplate",
                    "type": "TemplateRef<HTMLButtonElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'TabButtonTemplate', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "tabContentTemplate",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'TabContentTemplate', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "extends": "OsBaseComponent",
            "templateData": "<ng-template #TabButtonTemplate>\n    <os-button\n        [style]=\"tabButtonStyle\"\n        [styleClass]=\"tabButtonStyleClass\"\n        [role]=\"'tab'\"\n        [ariaSelected]=\"selected\"\n        (osClick)=\"osTabButtonClick.emit($event)\">\n        {{ label }}\n    </os-button>\n</ng-template>\n\n<ng-template #TabContentTemplate>\n    <article\n        class=\"os-element\"\n        [ngStyle]=\"style\"\n        [class]=\"styleClass\"\n        role=\"tabpanel\">\n        <ng-content>\n        </ng-content>\n    </article>\n</ng-template>"
        },
        {
            "name": "TabGroupComponent",
            "id": "component-TabGroupComponent-658c2dae90167fa1f3dfd616d01f74ff",
            "file": "projects/os-angular/src/lib/modules/tab-group/components/tab-group/tab-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-tab-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "tabButtonOnClickSubscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "tabComponentList",
                    "type": "QueryList<TabComponent>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabComponent"
                        }
                    ],
                    "modifierKind": [
                        114,
                        132
                    ]
                },
                {
                    "name": "trackByFn",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deselectAllTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "extends": "OsBaseComponent",
            "implements": [
                "OnDestroy",
                "AfterContentInit"
            ],
            "templateData": "<section\n    class=\"os-element tabs\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\">\n\n    <menu\n        class=\"os-element\"\n        role=\"tablist\"\n        aria-label=\"Sample Tabs\">\n\n        <ng-template\n            ngFor\n            let-tabContent\n            [ngForOf]=\"tabComponentList\"\n            [ngForTrackBy]=\"trackByFn\">\n            <ng-container\n                *ngTemplateOutlet=\"tabContent.tabButtonTemplate\">\n            </ng-container>\n        </ng-template>\n\n    </menu>\n\n    <ng-template\n        ngFor\n        let-tabContent\n        [ngForOf]=\"tabComponentList\"\n        [ngForTrackBy]=\"trackByFn\">\n        <ng-template [ngIf]=\"tabContent.selected\">\n            <ng-container\n                *ngTemplateOutlet=\"tabContent.tabContentTemplate\">\n            </ng-container>\n        </ng-template>\n    </ng-template>\n\n</section>"
        },
        {
            "name": "TextareaBoxComponent",
            "id": "component-TextareaBoxComponent-13e4f1b0fc7569d2ddd418661f1a2358",
            "file": "projects/os-angular/src/lib/modules/textarea-box/components/textarea-box/textarea-box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-textarea-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./textarea-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cols",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "rows",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "line": 10,
                    "type": "boolean",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "line": 19,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 13,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osBlur",
                    "defaultValue": "new EventEmitter()",
                    "line": 25,
                    "type": "EventEmitter<Event>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<Event>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osFocus",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "extends": "OsBaseFieldComponent",
            "templateData": "<label\n    class=\"os-element\">\n    {{ label }}\n</label>\n\n<textarea\n    class=\"os-element\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [name]=\"name\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [rows]=\"rows\"\n    [cols]=\"cols\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\"\n    (focus)=\"osFocus.emit($event)\"\n    (blur)=\"osBlur.emit($event)\"\n    (change)=\"osChange.emit($event)\">\n</textarea>"
        },
        {
            "name": "TextBoxComponent",
            "id": "component-TextBoxComponent-93da90d86f92c5a201442ef182e4b021",
            "file": "projects/os-angular/src/lib/modules/text-box/components/text-box/text-box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-text-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "line": 13,
                    "type": "textboxType"
                },
                {
                    "name": "disabled",
                    "line": 10,
                    "type": "boolean",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "line": 19,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 13,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osBlur",
                    "defaultValue": "new EventEmitter()",
                    "line": 25,
                    "type": "EventEmitter<Event>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 28,
                    "type": "EventEmitter<Event>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osFocus",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseFieldComponent"
                    }
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "extends": "OsBaseFieldComponent",
            "templateData": "<label\n    class=\"os-element\">\n    {{ label }}\n</label>\n\n<input\n    class=\"os-element\"\n    [class]=\"styleClass\"\n    [ngStyle]=\"style\"\n    [placeholder]=\"placeholder\"\n    [name]=\"name\"\n    [disabled]=\"disabled\"\n    [type]=\"type\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\"\n    (focus)=\"osFocus.emit($event)\"\n    (blur)=\"osBlur.emit($event)\"\n    (change)=\"osChange.emit($event)\" />"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-0150d23999b382dc2266c6b67e2c202f",
            "file": "projects/os-angular/src/lib/modules/text/components/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "extends": "OsBaseComponent",
            "templateData": "<span\n    class=\"os-element\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblclick.emit($event)\"\n    (mousedown)=\"osMousedown.emit($event)\"\n    (mousemove)=\"osMousemove.emit($event)\"\n    (mouseout)=\"osMouseout.emit($event)\"\n    (mouseover)=\"osMouseover.emit($event)\"\n    (mouseup)=\"osMouseup.emit($event)\"\n    (wheel)=\"osWheel.emit($event)\">\n    <ng-content>\n    </ng-content>\n</span>"
        },
        {
            "name": "TitleBarComponent",
            "id": "component-TitleBarComponent-e08711a95f552581a07ef24b2385af9d",
            "file": "projects/os-angular/src/lib/modules/window/components/title-bar/title-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-title-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./title-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osCloseButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "osDblClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMaximizeButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMinimizeButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    class=\"os-title-bar os-element\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\"\n    (click)=\"osClick.emit($event)\"\n    (dblclick)=\"osDblClick.emit($event)\">\n    <div class=\"os-title-bar-text os-element\">\n        <ng-content>\n        </ng-content>\n    </div>\n\n    <div\n        class=\"os-title-bar-controls os-element\">\n        <os-button\n            [ariaLabel]=\"'Minimize'\"\n            (osClick)=\"osMinimizeButtonClick.emit($event)\">\n        </os-button>\n\n        <os-button\n            [ariaLabel]=\"'Maximize'\"\n            (osClick)=\"osMaximizeButtonClick.emit($event)\">\n        </os-button>\n\n        <os-button\n            [ariaLabel]=\"'Close'\"\n            (osClick)=\"osCloseButtonClick.emit($event)\">\n        </os-button>\n    </div>\n</div>"
        },
        {
            "name": "TreeViewComponent",
            "id": "component-TreeViewComponent-c146bb09af3c063b251d66a7ca539f3e",
            "file": "projects/os-angular/src/lib/modules/tree-view/components/tree-view/tree-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-tree-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 13,
                    "type": "[]"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_data",
                    "type": "TreeNode<any>[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "prepareData",
                    "args": [
                        {
                            "name": "data",
                            "type": "TreeNode<any>[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TreeNode<any>[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setParentForNodeAndChildren",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode<any>"
                        },
                        {
                            "name": "parent",
                            "type": "TreeNode<any>",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode<any>",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode<any>",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parent",
                            "type": "TreeNode<any>",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 23
            },
            "extends": "OsBaseComponent",
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 13,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 19
                    }
                }
            },
            "templateData": "<ul\n    class=\"os-element tree-view\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\">\n\n    <ng-container\n        *ngTemplateOutlet=\"treeNodesTemplate; context:{ nodes: data }\">\n    </ng-container>\n\n</ul>\n\n<ng-template\n    #treeNodesTemplate\n    let-nodes=\"nodes\">\n    <li\n        *ngFor=\"let node of nodes\"\n        class=\"os-element\"\n        [class.os-tree-node-expandable]=\"node.children?.length\"\n        [class.os-tree-node-flat]=\"!node.children?.length\">\n        <ng-template [ngIf]=\"node.children\">\n            <details class=\"os-element\">\n                <summary class=\"os-element\">\n                    {{ node.label }}\n                </summary>\n\n                <ul class=\"os-element\">\n                    <ng-container\n                        *ngTemplateOutlet=\"treeNodesTemplate; context:{ nodes: node.children }\">\n                    </ng-container>\n                </ul>\n            </details>\n        </ng-template>\n\n        <ng-template [ngIf]=\"!node.children\">\n            {{ node.label }}\n        </ng-template>\n    </li>\n</ng-template>"
        },
        {
            "name": "WindowComponent",
            "id": "component-WindowComponent-577f4a1ed0cb1e1c29138a90885b5822",
            "file": "projects/os-angular/src/lib/modules/window/components/window/window.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-window",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./window.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "height",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "isClosable",
                    "defaultValue": "true",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "isMaximizable",
                    "defaultValue": "true",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "isMinimizable",
                    "defaultValue": "true",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "isTitleBarVisible",
                    "defaultValue": "true",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "scrollViewStyle",
                    "line": 39,
                    "type": "any"
                },
                {
                    "name": "scrollViewStyleClass",
                    "line": 42,
                    "type": "any"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "width",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "zIndex",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "style",
                    "description": "<p>Object with css styles which will applied for target internal element</p>\n",
                    "line": 12,
                    "type": "object",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "description": "<p>String with classes for target internal element</p>\n",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 45,
                    "type": "EventEmitter"
                },
                {
                    "name": "osCloseButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMaximizeButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMinimizeButtonClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 60,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMouseDown",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 48,
                    "type": "EventEmitter"
                },
                {
                    "name": "osMouseUp",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 51,
                    "type": "EventEmitter"
                },
                {
                    "name": "osTitleBarClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 54,
                    "type": "EventEmitter"
                },
                {
                    "name": "osTitleBarDblClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "osClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element click event</p>\n",
                    "line": 24,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osDblclick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element dblclick event</p>\n",
                    "line": 30,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousedown",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousedown event</p>\n",
                    "line": 36,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMousemove",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mousemove event</p>\n",
                    "line": 42,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseout",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseout event</p>\n",
                    "line": 48,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseover",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseover event</p>\n",
                    "line": 54,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osMouseup",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element mouseup event</p>\n",
                    "line": 60,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                },
                {
                    "name": "osWheel",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Target internal element wheel event</p>\n",
                    "line": 66,
                    "type": "EventEmitter<MouseEvent>",
                    "inheritance": {
                        "file": "OsBaseComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 66
            },
            "extends": "OsBaseComponent",
            "templateData": "<div\n    class=\"os-window os-element\"\n    [ngStyle]=\"style\"\n    [class]=\"styleClass\"\n    [class.active]=\"isActive\"\n    [style.width]=\"width\"\n    [style.height]=\"height\"\n    [style.zIndex]=\"zIndex\"\n    (click)=\"osClick.emit($event)\"\n    (mousedown)=\"osMouseDown.emit($event)\"\n    (mouseup)=\"osMouseUp.emit($event)\">\n\n    <ng-content\n        select=\"[os-window-content]\">\n    </ng-content>\n\n    <os-title-bar\n        [hidden]=\"!isTitleBarVisible\"\n        (osClick)=\"osTitleBarClick.emit($event)\"\n        (osDblClick)=\"osTitleBarDblClick.emit($event)\"\n        (osMinimizeButtonClick)=\"osMinimizeButtonClick.emit($event)\"\n        (osMaximizeButtonClick)=\"osMaximizeButtonClick.emit($event)\"\n        (osCloseButtonClick)=\"osCloseButtonClick.emit($event)\">\n        {{ title }}\n    </os-title-bar>\n\n    <div class=\"os-window-body\">\n        <os-scroll-view\n            [verticalScrollEnabled]=\"true\"\n            [horizontalScrollEnabled]=\"true\"\n            [style]=\"scrollViewStyle\"\n            [styleClass]=\"scrollViewStyleClass\">\n            <ng-content>\n            </ng-content>\n        </os-scroll-view>\n    </div>\n\n</div>"
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DragAndDropModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OsDraggableDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OsDraggableDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FieldRowModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FieldRowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FieldRowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GroupBoxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GroupBoxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GroupBoxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OsAngularModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "DragAndDropModule"
                        },
                        {
                            "name": "FieldRowModule"
                        },
                        {
                            "name": "GroupBoxModule"
                        },
                        {
                            "name": "ListModule"
                        },
                        {
                            "name": "RadioButtonModule"
                        },
                        {
                            "name": "ResizerModule"
                        },
                        {
                            "name": "ScrollViewModule"
                        },
                        {
                            "name": "SelectboxModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SliderModule"
                        },
                        {
                            "name": "TabGroupModule"
                        },
                        {
                            "name": "TextBoxModule"
                        },
                        {
                            "name": "TextModule"
                        },
                        {
                            "name": "TextareaBoxModule"
                        },
                        {
                            "name": "TreeViewModule"
                        },
                        {
                            "name": "WindowModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "DragAndDropModule"
                        },
                        {
                            "name": "FieldRowModule"
                        },
                        {
                            "name": "GroupBoxModule"
                        },
                        {
                            "name": "ListModule"
                        },
                        {
                            "name": "RadioButtonModule"
                        },
                        {
                            "name": "ResizerModule"
                        },
                        {
                            "name": "ScrollViewModule"
                        },
                        {
                            "name": "SelectboxModule"
                        },
                        {
                            "name": "SliderModule"
                        },
                        {
                            "name": "TabGroupModule"
                        },
                        {
                            "name": "TextBoxModule"
                        },
                        {
                            "name": "TextModule"
                        },
                        {
                            "name": "TextareaBoxModule"
                        },
                        {
                            "name": "TreeViewModule"
                        },
                        {
                            "name": "WindowModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ResizerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OsResizableDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OsResizableDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ScrollViewModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ScrollViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ScrollViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectboxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OptionComponent"
                        },
                        {
                            "name": "SelectboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OptionComponent"
                        },
                        {
                            "name": "SelectboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SliderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabGroupModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextareaBoxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextareaBoxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextareaBoxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextBoxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextBoxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextBoxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TreeViewModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TreeViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TreeViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WindowModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DynamicWindowControlService"
                        },
                        {
                            "name": "DynamicWindowService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DynamicWindowComponent"
                        },
                        {
                            "name": "DynamicWindowContentDirective"
                        },
                        {
                            "name": "TitleBarComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DragAndDropModule"
                        },
                        {
                            "name": "ResizerModule"
                        },
                        {
                            "name": "ScrollViewModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TitleBarComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [],
        "functions": [],
        "typealiases": [
            {
                "name": "buttonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"submit\" | \"reset\"",
                "file": "projects/os-angular/src/lib/modules/button/shared/button-type.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "textboxType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"number\" | \"email\" | \"password\" | \"hidden\"",
                "file": "projects/os-angular/src/lib/modules/text-box/shared/text-box-type.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "xAxisStyleNameType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"marginLeft\" | \"marginRight\"",
                "file": "projects/os-angular/src/lib/modules/resizer/types/x-axis-style-name.type.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "yAxisStyleNameType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"bottom\" | \"marginTop\" | \"marginBottom\"",
                "file": "projects/os-angular/src/lib/modules/resizer/types/y-axis-style-name.type.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [
            {
                "name": "MouseButtonEnum",
                "childs": [
                    {
                        "name": "left",
                        "value": "0"
                    },
                    {
                        "name": "middle",
                        "value": "1"
                    },
                    {
                        "name": "right",
                        "value": "2"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "projects/os-angular/src/lib/core/enums/mouse-button.enum.ts"
            },
            {
                "name": "ResizerEnum",
                "childs": [
                    {
                        "name": "top",
                        "value": "top"
                    },
                    {
                        "name": "left",
                        "value": "left"
                    },
                    {
                        "name": "right",
                        "value": "right"
                    },
                    {
                        "name": "bottom",
                        "value": "bottom"
                    },
                    {
                        "name": "topLeft",
                        "value": "topLeft"
                    },
                    {
                        "name": "topRight",
                        "value": "topRight"
                    },
                    {
                        "name": "bottomLeft",
                        "value": "bottomLeft"
                    },
                    {
                        "name": "bottomRight",
                        "value": "bottomRight"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "projects/os-angular/src/lib/modules/resizer/enums/resizer.enum.ts"
            }
        ],
        "groupedVariables": {},
        "groupedFunctions": {},
        "groupedEnumerations": {
            "projects/os-angular/src/lib/core/enums/mouse-button.enum.ts": [
                {
                    "name": "MouseButtonEnum",
                    "childs": [
                        {
                            "name": "left",
                            "value": "0"
                        },
                        {
                            "name": "middle",
                            "value": "1"
                        },
                        {
                            "name": "right",
                            "value": "2"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "projects/os-angular/src/lib/core/enums/mouse-button.enum.ts"
                }
            ],
            "projects/os-angular/src/lib/modules/resizer/enums/resizer.enum.ts": [
                {
                    "name": "ResizerEnum",
                    "childs": [
                        {
                            "name": "top",
                            "value": "top"
                        },
                        {
                            "name": "left",
                            "value": "left"
                        },
                        {
                            "name": "right",
                            "value": "right"
                        },
                        {
                            "name": "bottom",
                            "value": "bottom"
                        },
                        {
                            "name": "topLeft",
                            "value": "topLeft"
                        },
                        {
                            "name": "topRight",
                            "value": "topRight"
                        },
                        {
                            "name": "bottomLeft",
                            "value": "bottomLeft"
                        },
                        {
                            "name": "bottomRight",
                            "value": "bottomRight"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "projects/os-angular/src/lib/modules/resizer/enums/resizer.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/os-angular/src/lib/modules/button/shared/button-type.ts": [
                {
                    "name": "buttonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"submit\" | \"reset\"",
                    "file": "projects/os-angular/src/lib/modules/button/shared/button-type.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "projects/os-angular/src/lib/modules/text-box/shared/text-box-type.ts": [
                {
                    "name": "textboxType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"number\" | \"email\" | \"password\" | \"hidden\"",
                    "file": "projects/os-angular/src/lib/modules/text-box/shared/text-box-type.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "projects/os-angular/src/lib/modules/resizer/types/x-axis-style-name.type.ts": [
                {
                    "name": "xAxisStyleNameType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"marginLeft\" | \"marginRight\"",
                    "file": "projects/os-angular/src/lib/modules/resizer/types/x-axis-style-name.type.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "projects/os-angular/src/lib/modules/resizer/types/y-axis-style-name.type.ts": [
                {
                    "name": "yAxisStyleNameType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"bottom\" | \"marginTop\" | \"marginBottom\"",
                    "file": "projects/os-angular/src/lib/modules/resizer/types/y-axis-style-name.type.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 28,
        "status": "medium",
        "files": [
            {
                "filePath": "projects/os-angular/src/lib/core/base-components/button.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBaseButtonComponent",
                "coveragePercent": 63,
                "coverageCount": "12/19",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/core/base-components/element.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBaseComponent",
                "coveragePercent": 83,
                "coverageCount": "10/12",
                "status": "very-good"
            },
            {
                "filePath": "projects/os-angular/src/lib/core/base-components/field.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBaseFieldComponent",
                "coveragePercent": 52,
                "coverageCount": "10/19",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/helpers/id-generator.helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IdGenerator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/helpers/outside-click.helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OutsideClick",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/helpers/random.helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RandomHelper",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/button/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 73,
                "coverageCount": "22/30",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/checkbox/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/drag-and-drop/classes/dragger-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DraggerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/drag-and-drop/directives/draggable.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OsDraggableDirective",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/drag-and-drop/interfaces/drag-info.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DragInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/field-row/components/field-row/field-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FieldRowComponent",
                "coveragePercent": 76,
                "coverageCount": "10/13",
                "status": "very-good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/group-box/components/group-box/group-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupBoxComponent",
                "coveragePercent": 76,
                "coverageCount": "10/13",
                "status": "very-good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/list/components/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemComponent",
                "coveragePercent": 50,
                "coverageCount": "10/20",
                "status": "medium"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/list/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 83,
                "coverageCount": "10/12",
                "status": "very-good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/list/interfaces/item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/radio-button/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/bottom-left-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BottomLeftResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/bottom-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BottomResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/bottom-right-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BottomRightResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/left-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LeftResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/resizer-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ResizerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Resizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/right-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RightResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/top-left-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TopLeftResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/top-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TopResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/classes/top-right-resizer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TopRightResizer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/directives/resizable.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OsResizableDirective",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/resizer/interfaces/resize-info.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResizeInfo",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/scroll-view/components/scroll-view/scroll-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScrollViewComponent",
                "coveragePercent": 71,
                "coverageCount": "10/14",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/selectbox/components/option/option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OptionComponent",
                "coveragePercent": 71,
                "coverageCount": "10/14",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/selectbox/components/selectbox/selectbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectboxComponent",
                "coveragePercent": 71,
                "coverageCount": "10/14",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/slider/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 50,
                "coverageCount": "10/20",
                "status": "medium"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/tab-group/components/tab-group/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupComponent",
                "coveragePercent": 55,
                "coverageCount": "10/18",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/tab-group/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 52,
                "coverageCount": "10/19",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/text-box/components/text-box/text-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextBoxComponent",
                "coveragePercent": 66,
                "coverageCount": "20/30",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/text/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/text/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 83,
                "coverageCount": "10/12",
                "status": "very-good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/textarea-box/components/textarea-box/textarea-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaBoxComponent",
                "coveragePercent": 64,
                "coverageCount": "20/31",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/tree-view/components/tree-view/tree-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeViewComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/tree-view/interfaces/node.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TreeNode",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicWindowConfig",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-injector.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicWindowInjector",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/classes/dynamic-window-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicWindowRef",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/components/dynamic-window/dynamic-window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicWindowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/64",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/components/title-bar/title-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleBarComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/components/window/window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WindowComponent",
                "coveragePercent": 32,
                "coverageCount": "10/31",
                "status": "medium"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/directives/dynamic-window-content.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DynamicWindowContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/interfaces/dynamic-window-di-params.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DynamicWindowDiParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/interfaces/dynamic-window-input-params.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DynamicWindowInputParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/services/dynamic-window-control.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DynamicWindowControlService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/os-angular/src/lib/modules/window/services/dynamic-window.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DynamicWindowService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            }
        ]
    }
}